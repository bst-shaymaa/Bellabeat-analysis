{"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.4.2","file_extension":".r","codemirror_mode":"r"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# %% [code]\n---\ntitle: 'Bellabeat: Google Data Analytics Capstone Project'\nauthor: \"Ryo Osari\"\ndate: \"2022-10-29\"\noutput:\n  html_document:\n    toc: yes\n    toc_depth: '4'\n    df_print: paged\n---\n\n*****\n# 1. Introduction\nHello everyone, my name is Ryo Osari and this project is the final part for completing the [**Google Data Analytics Professional Certificate**](https://www.coursera.org/professional-certificates/google-data-analytics). This Professional Certification gives a holistic approach what data analysts does according to Google's standard curriculum.\nThe skills learnt from this course are:\n\n**Soft skills**\n\n* Analytical thinking\n* Pattern recognition\n* Effective questioning\n\n**Hard skills**\n\n* Spreadsheets (Google Sheet & Excel)\n* SQL (PostGreSQL)\n* Tableau\n* R Programming\n\n*****\n## 1.1 Business Task\nThe goal of this project is to analyze smart device usage data in order to gain insight into how consumers use non-Bellabeat smart devices and how to apply these insights into Bellabeat's marketing strategy using these three questions:\n\n1. What are some trends in smart device usage?\n2. How could these trends apply to Bellabeat customers?\n3. How could these trends help influence Bellabeat marketing strategy?\n\n\n*****\n# 2. Prepare the Data and Libraries in RStudio\nCollect the data required for analysis but since the data is available on Kaggle publicly, [FitBit Fitness Tracker Data](https://www.kaggle.com/datasets/arashnic/fitbit) (CC0: Public Domain) and download the dataset.\n\n*****\n## 2.1 Data Limitation\n* **Demographically-limited:** Bellebeat is a health tracker made specifically for women, it is important to know the **gender** of the data. Other missing factors that determine health are **age**, **income and social status**, and **education** as stated by the [**World Health Organization**](https://www.who.int/news-room/questions-and-answers/item/determinants-of-health).\n* **Time frame:** 31 days is limited to make any solid recommendation since there are seasons involved in a given month to consider someone's health well being. There are seasonal variations in health-related human physical activity. [**Reilly T, Peiser B. Seasonal variations in health-related human physical activity. Sports Med. 2006;36(6):473-85. doi: 10.2165/00007256-200636060-00002. PMID: 16737341**](https://pubmed.ncbi.nlm.nih.gov/16737341/). \n\nNext, once the dataset's been downloaded, I prepare RStudio, an Integrated Development Environment (IDE) for R, a programming language for statistical computing and graphics. R itself can clean and make visualizations so it's my go-to cloud software.\n\n*****\n## 2.2 Install and load the packages\nInstall the RStudio libraries for analysis and visualizations\n```{r Install Packages}\ninstall.packages(\"tidyverse\")  # core package for cleaning and analysis\ninstall.packages(\"lubridate\")  # date library mdy()\ninstall.packages(\"janitor\")  # clean_names() to consists only _, character, numbers, and letters.\ninstall.packages(\"ggpubr\")  # for the donut chart ggdonutchart()\n```\n\nLoad the libraries\n```{r Load Libraries}\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(lubridate)\nlibrary(ggpubr)\n```\n\nAfter loading **tidyverse** package, the rest of the essential packages (**ggplot2**, **dplyr**, and **tidyr**) are loaded as well.\n\n*****\n## 2.3 Import and Prepare the Dataset\nUpload the archived dataset to RStudio by clicking the Upload button in the bottom right pane.\n\nFile will be saved in a new folder named \"Fitabase Data 4.12.16-5.12.16\".\n\n```{r Assigning Data}\nd_activity <- read_csv(\"../input/fitbit/Fitabase Data 4.12.16-5.12.16/dailyActivity_merged.csv\")\nd_sleep <- read_csv(\"../input/fitbit/Fitabase Data 4.12.16-5.12.16/sleepDay_merged.csv\")\nh_calories <- read_csv(\"../input/fitbit/Fitabase Data 4.12.16-5.12.16/hourlyCalories_merged.csv\")\nh_intensities <- read_csv(\"../input/fitbit/Fitabase Data 4.12.16-5.12.16/hourlyIntensities_merged.csv\")\nh_steps <- read_csv(\"../input/fitbit/Fitabase Data 4.12.16-5.12.16/hourlySteps_merged.csv\")\n```\n\n*****\n## 2.4 Preview Dataset\nUse head() function to a shortlist of each table and colnames() function for clearer column names.\n```{r Checking the Data}\nhead(d_activity)\nhead(d_sleep)\nhead(h_calories)\nhead(h_intensities)\nhead(h_steps)\n\ncolnames(d_activity)\ncolnames(d_sleep)\ncolnames(h_calories)\ncolnames(h_intensities)\ncolnames(h_steps)\n```\n\n\n*****\n# 3. Data Cleaning\nWith the data assigned to their own values and recognizing the data structures, I can start the cleaning process.\nThe goal of cleaning is to find:\n\n* **Data type**: Values must be of a certain type.\n* **Data range**: Values must fall between predefined maximum and minimum values.\n* **Mandatory values**: Ensure the values can't be left blank or empty.\n* **Unique**: No duplications.\n* **Regular expression (regex) patterns**: Values must match a prescribed pattern.\n* **Cross-field validation**: Certain conditions for multiple fields must be satisfied. Eg. Percentages must add up to 100%.\n* **Accuracy**: The data conforms to the actual entity being measured or described. Eg. zip codes are validated by street location.\n* **Completeness**: Data contains all desired components or described.\n* **Consistency**: Data is repeatable from different points of entry or collection.\n\n```{r Glimpse of the Data}\nglimpse(d_activity)\nglimpse(d_sleep)\nglimpse(h_calories)\nglimpse(h_intensities)\nglimpse(h_steps)\n```\nChecked and verified data type is accurate and consistent.\n\n```{r Clean Table Names}\nclean_names(d_activity)\nclean_names(d_sleep)\nclean_names(h_calories)\nclean_names(h_intensities)\nclean_names(h_steps)\n```\nTo make sure the names are consistent and doesn't contain any special characters.\n\n```{r Find and Remove Duplicates}\nsum(duplicated(d_activity))\nsum(duplicated(d_sleep))\nsum(duplicated(h_calories))\nsum(duplicated(h_intensities))\nsum(duplicated(h_steps))\n\n# Duplicates found and removed.\nd_sleep <- d_sleep[!duplicated(d_sleep), ]\n```\nDuplicates found 3 at the **d_sleep** data and removed.\n\n```{r Checking for NA Values}\nsum(is.na(d_activity))\nsum(is.na(d_sleep))\nsum(is.na(h_calories))\nsum(is.na(h_intensities))\nsum(is.na(h_steps))\n```\nMandatory values: Check and remove any NA values. Since the column in **weight_info** has too many empty values, the column \"Fat\" is removed.\n\n*****\n## 3.1 Data Formatting\n\n```{r Date Formatting the Daily Tables}\n# d_activity table\nd_activity <- d_activity %>%\n  rename(date = ActivityDate) %>%\n  mutate(date = as_date(date, format = \"%m/%d/%Y\"))\n\n# d_sleep table\nd_sleep <- d_sleep %>%\n  rename(date = SleepDay) %>%\n  mutate(date = as_date(date, format = \"%m/%d/%Y\"))\n```\nI will be joining the data frame of **d_sleep** into **d_activity** data frame. So I need to make the date format consistent and formatted between them.\n\n```{r Date Formatting the Hourly Tables}\n# h_calories table\nh_calories<- h_calories %>% \n  rename(date_time = ActivityHour) %>% \n  mutate(date_time = as.POSIXct(date_time,format =\"%m/%d/%Y %I:%M:%S %p\" , tz=Sys.timezone()))\n\n# h_intensities\nh_intensities<- h_intensities %>% \n    rename(date_time = ActivityHour) %>% \n    mutate(date_time = as.POSIXct(date_time,format =\"%m/%d/%Y %I:%M:%S %p\" , tz=Sys.timezone()))\n\n# h_steps\nh_steps<- h_steps %>% \n  rename(date_time = ActivityHour) %>% \n  mutate(date_time = as.POSIXct(date_time,format =\"%m/%d/%Y %I:%M:%S %p\" , tz=Sys.timezone()))\n```\nFor the hourly tables, I will format the date time into a the **24-hour clock** type since it is currently using the **12-hour clock**.\n\n*****\n## 3.2 Data Merging\n```{r Data Merging}\n# Merge of d_activity + d_sleep\nd_merged <- merge(d_activity, d_sleep, by = c(\"Id\", \"date\"))\n\n# Merge of h_calories + h_intensities + h_steps\nh_calories_intensities <- merge(h_calories, h_intensities, by = c(\"Id\", \"date_time\"))\n\n# Merge the h_calories_intensities with h_steps to have the full data\nh_merged <- merge(h_calories_intensities, h_steps, by = c(\"Id\", \"date_time\"))\n\n# Check the new table with head()\nhead(d_merged)\nhead(h_merged)\n```\nMerge all the tables into two major tables for the final process of analysis and visualization.\n\n\n*****\n# 4. Data Analysis\nThis is the part of analyzing the data by formatting and adjusting, identifying relationships and patterns between the data, and making calculations.\n\nI will first the mean (average) steps for each user to find the amount of activity and put them into a new category.\n\n```{r New Table for Pie Chart}\nd_avg_steps <- d_merged %>%\n    group_by(Id) %>%\n    summarise(avg_d_steps = mean(TotalSteps), avg_d_calories = mean(Calories), avg_d_sleep = mean(TotalMinutesAsleep))\n\n# Check the new table with head()\nhead(d_avg_steps)\n```\n**Parameter:**\n\n* **Inactive:** less than **5,000** steps a day\n* **Average (somewhat active):** ranges from **5,000** to **10,000** steps\n* **Active:** above **10,000** steps\n\nThe range above is a modified range inspired from an article [**Healthline: How Many Steps Do People Take Per Day on Average?**](https://www.healthline.com/health/how-many-steps-a-day#How-many-steps-should-you-take-a-day?)\n\n```{r New Table for Pie Chart-2}\n# Add new column to categorize user steps and sleep quality\nactive_users <- d_avg_steps %>%\n  mutate(active_users = case_when(\n    avg_d_steps < 5000 ~ \"Inactive\",\n    avg_d_steps >= 5000 & avg_d_steps < 9999 ~ \"Average\", \n    avg_d_steps >= 10000 & avg_d_steps < 12499 ~ \"Active\",\n    avg_d_steps > 12500 ~ \"Very Active\")) %>%\n  mutate(sleep_quality = case_when(\n    avg_d_sleep < 420 ~ \"Insufficient Sleep\",\n    avg_d_sleep >= 420 & avg_d_sleep < 540 ~ \"Good Sleep\", \n    avg_d_sleep > 540 ~ \"Excessive Sleep\"\n  ))\n\n# Check the new table with head()\nhead(active_users)\n```\nCreated a new table for further analysis and visualizations.\n\n```{r Percentage for Charts}\n# Create a new percentage table from active_users\nactive_users_perc <- active_users %>%\n    group_by(active_users) %>%\n    summarise(total = n()) %>%\n    mutate(totals = sum(total)) %>%\n    group_by(active_users) %>%\n    summarise(total_percent = total / totals) %>%\n    mutate(labels = scales::percent(total_percent))\n\n# And create percentage table for sleep_quality\nsleep_users_perc <- active_users %>%\n    group_by(sleep_quality) %>%\n    summarise(total = n()) %>%\n    mutate(totals = sum(total)) %>%\n    group_by(sleep_quality) %>%\n    summarise(total_percent = total / totals) %>%\n    mutate(labels = scales::percent(total_percent))\n\n# Check the new table with head()\nhead(active_users_perc)\nhead(sleep_users_perc)\n```\n\nClean up the unused tables to keep the Data Environment clean of aliases in the RStudio.\n```{r Clean up Unused Tables}\nrm(d_avg_steps)\nrm(d_sleep)\nrm(h_calories)\nrm(h_calories_intensities)\nrm(h_intensities)\nrm(h_steps)\n```\n\n\n*****\n# 5. Visualizations & Key Findings\nCreate 2 pie charts to show the proportions of each active users and their sleep qualities.\n```{r Pie Chart Creation}\n# Pie Chart for Active Users\nactive_users_perc %>%\n  ggplot(aes(x=\"\",y=total_percent, fill=active_users)) +\n  geom_bar(stat = \"identity\", width = 1)+\n  coord_polar(\"y\", start=0)+\n  theme_minimal()+\n  theme(axis.title.x= element_blank(),\n        axis.title.y = element_blank(),\n        panel.border = element_blank(), \n        panel.grid = element_blank(), \n        axis.ticks = element_blank(),\n        axis.text.x = element_blank(),\n        plot.title = element_text(hjust = 0.5, size=14, face = \"bold\")) +\n  scale_fill_manual(values = c(\"#85e085\",\"#ffd480\", \"#ff8080\", \"#e6e600\")) +\n  geom_text(aes(label = labels),\n            position = position_stack(vjust = 0.5))+\n  labs(title=\"User's Active Based on Steps\")\n\n# Pie Chart for User's Sleep Quality\nsleep_users_perc %>%\n  ggplot(aes(x=\"\",y=total_percent, fill=sleep_quality)) +\n  geom_bar(stat = \"identity\", width = 1)+\n  coord_polar(\"y\", start=0)+\n  theme_minimal()+\n  theme(axis.title.x= element_blank(),\n        axis.title.y = element_blank(),\n        panel.border = element_blank(), \n        panel.grid = element_blank(), \n        axis.ticks = element_blank(),\n        axis.text.x = element_blank(),\n        plot.title = element_text(hjust = 0.5, size=14, face = \"bold\")) +\n  scale_fill_manual(values = c(\"#ffd480\", \"#85e085\", \"#ff8080\")) +\n  geom_text(aes(label = labels),\n            position = position_stack(vjust = 0.5))+\n  labs(title=\"User's Sleep Quality\")\n```\n\n*****\n## 5.1 Pie Chart's Observation\n**User's Active Based on Steps**\nAs shown on the first chart, the majority of people are averagely active (with 5,000 to 10,000 steps per day). The runner up is the inactive people and only a minority of 4.2% of the people are highly active (minimum of 12,500 steps per day).\n\n**User's Sleep Quality**\nThere is a near equal split between people who doesn't get enough sleep (less than 7 hours per day) in comparison to those who get the right amount of sleep (7 to 9 hours per day).\n\n*****\n## 5.2 Correlation Coefficient: Calories vs. Steps\nNow we need to see if there is a correlation between steps and calories. Does more steps equal to higher calorie counts or not? How strong is their relationship?\n\n**Correlation Coefficient**\n1. Very Weak    0.00 to 0.19\n2. Weak         0.20 to 0.39\n3. Moderate     0.40 to 0.59\n4. Strong       0.60 to 0.79\n5. Very Strong  0.80 to 1.0\n\n```{r Steps vs. Calories Chart}\nd_merged %>% \n  group_by(TotalSteps, Calories) %>% \n  ggplot(aes(x = TotalSteps, y = Calories, color = Calories)) +\n  geom_point() +\n  geom_smooth(color = \"blue\") + \n  theme(legend.position = c(.8, .3),\n        legend.spacing.y = unit(2, \"mm\"), \n        panel.border = element_rect(colour = \"black\", fill=NA),\n        legend.background = element_blank(),\n        legend.box.background = element_rect(colour = \"black\")) +\n  labs(title = 'Calories vs. Total Steps',\n       y = 'Calories',\n       x = 'Total Steps',\n       caption = 'Data Source: FitBit Fitness Tracker Data')\n```\n\nAfter looking at the result, it's time to count the Correlation Coefficient between Calories vs. Steps.\n```{r Correlation between Steps vs. Calories}\ncor(d_merged$TotalSteps, d_merged$Calories)\n\n#It outputs as 0.4063007\n```\nAfter calculating the Correlation Coefficient, the result shows as **0.4063007.**\n\nAs the table above, it shows that there its relationship strength is **Moderate.**\n\n```{r Steps vs. Sleep Chart}\nd_merged %>% \n  group_by(TotalSteps, TotalMinutesAsleep) %>% \n  ggplot(aes(x = TotalSteps, y = TotalMinutesAsleep, color = TotalMinutesAsleep)) +\n  geom_point() +\n  geom_smooth(color = \"red\") + \n  theme(legend.position = c(.8, .3),\n        legend.spacing.y = unit(2, \"mm\"), \n        panel.border = element_rect(colour = \"black\", fill=NA),\n        legend.background = element_blank(),\n        legend.box.background = element_rect(colour = \"black\")) +\n  labs(title = 'Minutes Asleep vs. Total Steps',\n       y = 'Minutes Asleep',\n       x = 'Total Steps',\n       caption = 'Data Source: FitBit Fitness Tracker Data')\n```\n\n```{r Correlation between Steps vs. Sleep}\ncor(d_merged$TotalSteps, d_merged$TotalMinutesAsleep)\n\n#It outputs as -0.1903439\n```\nThe result of **-0.1903439** shows that there is **no correlation** between the amount a user steps per day and the amount of sleep they have at that night.\n\n\nAfter  this discovered correlation, next, I need to find the average steps taken to discover which days tend to have more steps, more activities.\n\n*****\n### 5.3 Bar Chart: Daily Average Sleeps & Steps\nPrepare a new table for the bar chart to visualize which day, on average, has the most and least activities in a week\n```{r New Table for Daily Average Sleeps & Steps}\n# Table for bar charts\nweekday_d <- d_merged %>%\n  mutate(weekday = weekdays(date), TotalSteps, TotalMinutesAsleep)\n\nweekday_d$weekday <- ordered(weekday_d$weekday, levels = c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\",\n  \"Friday\", \"Saturday\", \"Sunday\"))\n\nweekday_d <- weekday_d %>%\n  group_by(weekday) %>%\n  summarize (daily_steps = mean(TotalSteps), daily_sleep = mean(TotalMinutesAsleep))\n\n# Check the new table with head()\nhead(weekday_d)\n```\n\n```{r Daily Average Sleeps & Steps Bar Chart}\n# Bar chart for Steps\nggplot(weekday_d, aes(weekday, daily_steps)) +\n      geom_col(fill = \"#006699\") +\n      geom_hline(yintercept = 7500, size=1, color = \"#D90319\") +\n      labs(title = \"Daily Steps per Weekday\", x= \"\", y = \"\")\n    \n\n# Bar chart for Sleeps\nggplot(weekday_d, aes(weekday, daily_sleep)) +\n      geom_col(fill = \"#002B55\") +\n      geom_hline(yintercept = 480, size=1, color = \"#D90319\") +\n      labs(title = \"Minutes Asleep per Weekday\", x = \"\", y = \"\")\n```\n**Bar Chart for Steps**\n\n* Users are able to maintain a healthy average steps of around or above 7,500 steps per day except Sundays.\n* Saturday has the highest amount of steps per day, knowing that Saturday is in the weekend.\n\n**Bar Chart for Sleeps**\n\n* Users did not meet the recommended amount of sleeps in minutes per day (8 hours) in any given day.\n* The most amount of sleep users can get on average is on Sundays.\n\n###5.4 Key Findings\nWith the data cleaned and analyzed, it has provided valuable insights for Bellabeat's marketing strategy team.\n\n* The majority of the users are moderately active and the next majority of the users are inactive (under 5,000 steps per day).\n* 54% of the users didn't has insufficient amount of sleep and 42% has good sleep. It's fairly equal.\n* There is a fair amount of positive correlation between steps and calories burnt per day.\n* There is no correlation between the amount of steps and amount of sleep.\n* Users are mostly active on Saturday, least active during Sundays, and follows up to a near-equal amount of activities on Monday and Tuesday.\n* Users, on average did not get enough sleep every day. The most amount of sleep they get is only on Sunday.\n\n*****\n# 6. Recommendations\nKeeping in mind, Bellabeat is a high-tech manufacturer of health-focused products for women and the main goal of this project is to gain insight into how consumers use non-Bellabeat smart devices and provide high-level recommendations for how these trends can inform Bellabeat's marketing strategy.\n\n### 6.1 Marketing Strategy Recommendations for Bellabeat are:\n\n* With health-focused product in mind, focusing on the long-term health of the users is a priority. Since this is a women-based product, it is possible to collect more data by adding an additional feature to add their menstrual cycle the product so Bellabeat can have more in-depth analysis in the future, complimenting features that may have positive impact during their time of the month.\n* Focus on the majority of the users, which are the average active people but still keep other users in mind. Provide solutions to the problem they are currently facing, with or without their knowledge that their lifestyle may impact their long term health. A small friendly reminder that it is important to maintain a good amount of sleep and remind them that it is only \"x amount of steps left\" to keep a active lifestyle.\n* Adding a new feature, knowing their calories intake will help maintain a balanced calories amount of intake and outtake can be important. With the new data, it is possible to help users give a friendly reminder to not skip out meals, or remind if they had enough meal to consume or not.\n  * Further possibilities with this new data, it is possible to help users keep track of their goal, if they wanted to gain or lose weight with the in and out of calories per day.\n* Gamification. WIth features that may have \"Levels\", compare to other users in a positive manner can motivate users to stay active and healthy. Making daily and weekly goals can help add \"Experience\" to the user's profile and have sharing feature after each successful goal. Referral system with rewards to other people can help them build communities focusing more with using Bellabeat as their main product.\n\n## 6.2 Further Recommendations, Product Related:\nWith better products, users will have a better time using it. Collecting and processing health related data, it is ideal to have users to always use their products, even during sleep. With less down time, it is important to make further improvements on:\n\n* Make the product lightweight and skin-friendly material.\n* Longer battery life for less down time due to charging the product.\n* Make the product gives an elegant sensation and universal design so it can fit most outfits. (Further data collection necessary).\n\nSometimes a short battery life can cause missing data due to users forgetting to wear their product again and leaving it at home.\n\nHigh quality materials in a product can make users proud of wearing it, and with more users always wearing it, it advertises to people that Bellabeat is out there, making them remember that there is a health product that people can wear everyday.","metadata":{"_uuid":"2581ed2f-8772-4ba6-a389-8d2fbd468428","_cell_guid":"6e68ba67-6236-44b4-a567-64c95dc85af5","collapsed":false,"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]}]}